//===--- DiagnosticsSema.def - Sema Diagnostic x-macros ---------*- C++ -*-===//
// Part of the Sora project, licensed under the MIT license.
// See LICENSE.txt in the project root for license information.
//
// Copyright (c) 2019 Pierre van Houtryve
//===----------------------------------------------------------------------===//

#if !(defined(DIAG) || defined(SORA_FWD_DECL)\
  || (defined(REMARK) && defined(NOTE) && defined(WARNING) && defined(ERROR)))
# error "Must define DIAG, SORA_FWD_DECL or {REMARK, NOTE, WARNING, ERROR}"
#endif

#ifndef DIAG
# define DIAG(KIND, ID, TEXT, SIGNATURE)
#endif

#ifndef REMARK
# define REMARK(ID, TEXT, SIGNATURE) DIAG(Remark, ID, TEXT, SIGNATURE)
#endif

#ifndef NOTE
# define NOTE(ID, TEXT, SIGNATURE) DIAG(Note, ID, TEXT, SIGNATURE)
#endif

#ifndef WARNING
# define WARNING(ID, TEXT, SIGNATURE) DIAG(Warning, ID, TEXT, SIGNATURE)
#endif

#ifndef ERROR
# define ERROR(ID, TEXT, SIGNATURE) DIAG(Error, ID, TEXT, SIGNATURE)
#endif

#ifndef SORA_FWD_DECL
# define SORA_FWD_DECL(X)
#endif

//===----------------------------------------------------------------------===//

//===- Forward Declarations -----------------------------------------------===//

SORA_FWD_DECL(class Identifier)

//===- Exprs --------------------------------------------------------------===//

ERROR(cannot_find_value_in_scope, 
  "cannot find value '%0' in this scope", (Identifier))

//===- Types --------------------------------------------------------------===//

ERROR(cannot_find_type_in_scope, 
  "cannot find type '%0' in this scope", (Identifier))

//===- Decls --------------------------------------------------------------===//

ERROR(value_already_defined_in_scope,
  "value '%0' is already defined in this scope", (Identifier))
NOTE(previous_def_is_here,
  "previous definition of '%0' is here", (Identifier))

ERROR(identifier_bound_multiple_times_in_same_pat, 
  "identifier '%0' is bound multiple times in the same pattern",
  (Identifier))
ERROR(identifier_bound_multiple_times_in_same_paramlist, 
  "identifier '%0' is bound multiple times in the same parameter list", 
  (Identifier))
NOTE(identifier_first_bound_here,
  "identifier '%0' is first bound here", (Identifier))

//===----------------------------------------------------------------------===//

#ifndef KEEP_DIAG_MACROS
# undef DIAG
# undef REMARK
# undef NOTE
# undef WARNING
# undef ERROR
# undef SORA_FWD_DECL
#endif