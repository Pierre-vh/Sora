//===--- DiagnosticsSema.def - Sema Diagnostic x-macros ---------*- C++ -*-===//
// Part of the Sora project, licensed under the MIT license.
// See LICENSE.txt in the project root for license information.
//
// Copyright (c) 2019 Pierre van Houtryve
//===----------------------------------------------------------------------===//

#if !(defined(DIAG) || defined(SORA_FWD_DECL)\
  || (defined(REMARK) && defined(NOTE) && defined(WARNING) && defined(ERROR)))
# error "Must define DIAG, SORA_FWD_DECL or {REMARK, NOTE, WARNING, ERROR}"
#endif

#ifndef DIAG
# define DIAG(KIND, ID, TEXT, SIGNATURE)
#endif

#ifndef REMARK
# define REMARK(ID, TEXT, SIGNATURE) DIAG(Remark, ID, TEXT, SIGNATURE)
#endif

#ifndef NOTE
# define NOTE(ID, TEXT, SIGNATURE) DIAG(Note, ID, TEXT, SIGNATURE)
#endif

#ifndef WARNING
# define WARNING(ID, TEXT, SIGNATURE) DIAG(Warning, ID, TEXT, SIGNATURE)
#endif

#ifndef ERROR
# define ERROR(ID, TEXT, SIGNATURE) DIAG(Error, ID, TEXT, SIGNATURE)
#endif

#ifndef SORA_FWD_DECL
# define SORA_FWD_DECL(X)
#endif

//===----------------------------------------------------------------------===//

//===- Forward Declarations -----------------------------------------------===//

SORA_FWD_DECL(class Identifier)
SORA_FWD_DECL(class Type)
SORA_FWD_DECL(class CanType)

//===- Decls --------------------------------------------------------------===//

ERROR(value_already_defined_in_scope,
  "value '%0' is already defined in this scope", (Identifier))
NOTE(previous_def_is_here,
  "previous definition of '%0' is here", (Identifier))

ERROR(identifier_bound_multiple_times_in_same_pat,
  "identifier '%0' is bound multiple times in the same pattern",
  (Identifier))

ERROR(identifier_bound_multiple_times_in_same_paramlist,
  "identifier '%0' is bound multiple times in the same parameter list",
  (Identifier))

NOTE(identifier_bound_first_here,
  "identifier '%0' is bound for the first time here", (Identifier))

ERROR(variable_binding_in_cond_requires_initializer,
  "variable binding in a condition requires an initializer", ())
ERROR(cond_binding_must_have_maybe_type,
  "initializer for conditional binding must have a maybe type, not '%0'", 
  (Type))

ERROR(cannot_create_var_of_type,
  "cannot create a variable of type '%0'", (Type))

NOTE(func_of_type_declared_here,
  "function '%0' of type '%1' declared here", (Identifier, Type))

//===- Exprs --------------------------------------------------------------===//

ERROR(cannot_convert_value_of_ty_to_expected_arg_ty,
  "cannot convert value of type '%0' to expected argument type '%1'", (Type, Type))

ERROR(fn_called_with_incorrect_number_of_args,
  "function of type '%0' takes '%1' parameter but '%2' were supplied", 
  (Type, size_t, size_t))

ERROR(value_of_non_function_type_isnt_callable,
  "value of non-function type '%0' is not callable", (Type))

ERROR(cannot_take_address_of_func,
  "cannot take the address of function '%0'", (Identifier))

ERROR(cannot_take_address_of_a_temp_value,
  "cannot take the address of a temporary value or of one of its members", ())

ERROR(cannot_take_address_of_literal,
  "cannot take the address of a literal", ())

ERROR(cannot_take_address_of_temp_tuple,
  "cannot take the address of a temporary tuple or of one of its elements", ())

ERROR(cannot_use_unary_oper_on_operand_of_type,
  "cannot use unary operator '%0' on operand of type '%1'", (StringRef, Type))

ERROR(cannot_deref_value_of_type,
  "cannot dereference a value of type '%0'", (Type))

NOTE(value_must_have_reference_type,
  "value must have a reference type", ())

ERROR(cannot_capture_dynamic_env_in_local_func,
  "cannot capture dynamic environment inside a local function", ())

ERROR(cannot_force_unwrap_value_of_type,
  "cannot force unwrap value of type '%0' - value must have a 'maybe' type", 
  (Type))

ERROR(result_values_in_ternary_have_different_types,
  "result values in '? :' expression have different types: '%0' and '%1'", 
  (Type, Type))

ERROR(value_cannot_be_used_as_cond,
  "value of type '%0' cannot be used as a condition "
  "- value must have a '%1' type", (Type, CanType))

ERROR(cannot_cast_value_of_type,
  "cannot cast value of type '%0' to '%1'", (Type, Type))

ERROR(base_operand_of_arrow_isnt_ref_ty,
  "base operand of '->' is not a reference type", ())

ERROR(base_operand_of_dot_isnt_value_ty,
  "base operand of '.' is not a value type", ())

ERROR(value_of_type_has_no_member_named,
  "value of type '%0' has no member named '%1'", (Type, Identifier))

ERROR(cannot_find_value_in_scope,
  "cannot find value '%0' in this scope", (Identifier))

ERROR(illegal_discard_expr,
  "'_' can only appear in a pattern or on the left side of an assignement", ())

ERROR(cannot_convert_value_of_type,
  "cannot convert value of type '%0' to '%1'", (Type, Type))

ERROR(reference_to_value_is_ambiguous,
  "reference to value '%0' is ambiguous", (Identifier))
NOTE(potential_candidate_found_here, "potential candidate found here", ())

//===- Patterns -----------------------------------------------------------===//

ERROR(cannot_convert_pattern,
  "cannot convert pattern of type '%0' to '%1'", (Type, Type))

ERROR(type_of_pattern_is_ambiguous_without_more_ctxt,
  "type of '%0' is ambiguous without more context", (StringRef))
NOTE(add_type_annot_to_give_pattern_a_type,
  "add a type annotation to give '%0' a type", (StringRef))

//===- Types --------------------------------------------------------------===//

ERROR(cannot_find_type_in_scope,
  "cannot find type '%0' in this scope", (Identifier))

//===----------------------------------------------------------------------===//

#ifndef KEEP_DIAG_MACROS
# undef DIAG
# undef REMARK
# undef NOTE
# undef WARNING
# undef ERROR
# undef SORA_FWD_DECL
#endif