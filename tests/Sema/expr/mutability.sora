// RUN: sorac -sema-only -verify %s

func value(ref: &mut i32) {
  let immutTuple : (i32, &i32, &mut i32) = (0, ref, ref)

  immutTuple.0 = 0    // expect-error: cannot assign to immutable expression of type 'i32'
  immutTuple.1 = ref  // expect-error: cannot assign to immutable expression of type '&i32'
  immutTuple.2 = ref  // expect-error: cannot assign to immutable expression of type '&mut i32'

  let mut mutTuple : (i32, &i32, &mut i32) = (0, ref, ref)

  mutTuple.0 = 0
  mutTuple.1 = ref
  mutTuple.2 = ref
}


func ref(ref: &(i32, &i32, &mut i32), mutRef: &mut (i32, &i32, &mut i32)) {
  ref->0 = 0    // expect-error: cannot assign to immutable expression of type 'i32'
  ref->1 = ref  // expect-error: cannot assign to immutable expression of type '&i32'
  ref->2 = ref  // expect-error: cannot assign to immutable expression of type '&mut i32'

  mutRef->0 = 0
  mutRef->1 = ref->1
  mutRef->2 = ref->2
}
