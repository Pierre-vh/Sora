// RUN: sorac -sema-only -verify -dump-ast %s | FileCheck %s

func defaultTypes() {
  // CHECK: IntegerLiteralExpr type=i32 loc=line:[[@LINE+1]]:3
  0
  // CHECK: FloatLiteralExpr type=f32 loc=line:[[@LINE+1]]:3
  0.0
  // CHECK: BooleanLiteralExpr type=bool loc=line:[[@LINE+1]]:3
  true 
  // CHECK: NullLiteralExpr type=null loc=line:[[@LINE+1]]:3
  null
}

func coercions() {
  // CHECK: IntegerLiteralExpr type=i16 loc=line:[[@LINE+1]]:3
  0 as i16
  // CHECK: IntegerLiteralExpr type=u32 loc=line:[[@LINE+1]]:3
  0 as u32
  // CHECK: IntegerLiteralExpr type=usize loc=line:[[@LINE+1]]:3
  0 as usize
  // CHECK: IntegerLiteralExpr type=isize loc=line:[[@LINE+1]]:3
  0 as isize
  // CHECK: FloatLiteralExpr type=f32 loc=line:[[@LINE+1]]:3
  0.0 as f32
  // CHECK: FloatLiteralExpr type=f64 loc=line:[[@LINE+1]]:3
  0.0 as f64
}

func inference() {
  // CHECK: IntegerLiteralExpr type=i8 loc=line:[[@LINE+1]]:15
  let _: i8 = 0
  // CHECK: IntegerLiteralExpr type=i16 loc=line:[[@LINE+1]]:16
  let _: i16 = 0
  // CHECK: IntegerLiteralExpr type=i32 loc=line:[[@LINE+1]]:16
  let _: i32 = 0
  // CHECK: IntegerLiteralExpr type=i64 loc=line:[[@LINE+1]]:16
  let _: i64 = 0
  // CHECK: IntegerLiteralExpr type=isize loc=line:[[@LINE+1]]:18
  let _: isize = 0
  // CHECK: IntegerLiteralExpr type=u8 loc=line:[[@LINE+1]]:15
  let _: u8 = 0
  // CHECK: IntegerLiteralExpr type=u16 loc=line:[[@LINE+1]]:16
  let _: u16 = 0
  // CHECK: IntegerLiteralExpr type=u32 loc=line:[[@LINE+1]]:16
  let _: u32 = 0
  // CHECK: IntegerLiteralExpr type=u64 loc=line:[[@LINE+1]]:16
  let _: u64 = 0
  // CHECK: IntegerLiteralExpr type=usize loc=line:[[@LINE+1]]:18
  let _: usize = 0
  
  // CHECK: FloatLiteralExpr type=f32 loc=line:[[@LINE+1]]:16
  let _: f32 = 0.0
  // CHECK: FloatLiteralExpr type=f64 loc=line:[[@LINE+1]]:16
  let _: f64 = 0.0

  // CHECK: IntegerLiteralExpr type=u8 loc=line:[[@LINE+1]]:21
  let _: maybe u8 = 0

  // CHECK: IntegerLiteralExpr type=usize loc=line:[[@LINE+1]]:30
  let _: maybe maybe usize = 0

  // CHECK: IntegerLiteralExpr type=u8 loc=line:[[@LINE+3]]:34
  // CHECK: IntegerLiteralExpr type=u16 loc=line:[[@LINE+2]]:37
  // CHECK: IntegerLiteralExpr type=u32 loc=line:[[@LINE+1]]:40
  let (_: u8, _: u16, _: u32) = (0, 0, 0)
}
