// RUN: sorac -sema-only -verify %s

func correct(a: &mut ((i32, i32), i16), b: (i32, i16), c: &((i32, i32), i16)) {  
    (a->0).0
    b.0
    (c->0).0
}

func incorrect(a: &mut (i16, i16), b: (i32, i16), c: i32) {  
  a.0       // expect-error:  base operand of '.' is not a value type
  b->0      // expect-error: base operand of '->' is not a reference type
  b.2       // expect-error: value of type '(i32, i16)' has no member named '2'
  b.123456123456123456  // expect-error: value of type '(i32, i16)' has no member named '123456123456123456'
  c->foo    // expect-error: base operand of '->' is not a reference type
  c.bar     // expect-error: value of type 'i32' has no member named 'bar'
}
