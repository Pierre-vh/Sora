// NOTE: CHECK lines have been generated by utils/update_filecheck_test.py
// RUN: sorac -sema-only -verify -dump-ast %s | FileCheck %s

// @TEST_PATTERN .*Decl

func foo() {
  let (x, (mut y, z)) = (0, (1, 2))
  let a = 0
  let mut b: i32
  func foo(x: u8, y: &mut i64) -> maybe &i32 {
    let (c, mut d, mut e, f) = (0, 1, 2, 3)
    let tmp: maybe u8 = 5
    if let tmp = tmp {
      foo(tmp, y)
    }
  }
}

// CHECK:         FuncDecl type=() -> void identifier=foo identifierLoc=line:6:6 fnLoc=line:6:1
// CHECK:            LetDecl letLoc=line:7:3 equalLoc=line:7:23
// CHECK:                  VarDecl type=i32 identifier=x identifierLoc=line:7:8 immutable
// CHECK:                      VarDecl type=i32 identifier=y identifierLoc=line:7:16 mutable
// CHECK:                    VarDecl type=i32 identifier=z identifierLoc=line:7:19 immutable
// CHECK:            LetDecl letLoc=line:8:3 equalLoc=line:8:9
// CHECK:                VarDecl type=i32 identifier=a identifierLoc=line:8:7 immutable
// CHECK:            LetDecl letLoc=line:9:3
// CHECK:                    VarDecl type=i32 identifier=b identifierLoc=line:9:11 mutable
// CHECK:            FuncDecl type=(u8, &mut i64) -> maybe &i32 identifier=foo identifierLoc=line:10:8 fnLoc=line:10:3
// CHECK:                ParamDecl type=u8 identifier=x identifierLoc=line:10:12
// CHECK:                ParamDecl type=&mut i64 identifier=y identifierLoc=line:10:19
// CHECK:                LetDecl letLoc=line:11:5 equalLoc=line:11:30
// CHECK:                      VarDecl type=i32 identifier=c identifierLoc=line:11:10 immutable
// CHECK:                        VarDecl type=i32 identifier=d identifierLoc=line:11:17 mutable
// CHECK:                        VarDecl type=i32 identifier=e identifierLoc=line:11:24 mutable
// CHECK:                      VarDecl type=i32 identifier=f identifierLoc=line:11:27 immutable
// CHECK:                LetDecl letLoc=line:12:5 equalLoc=line:12:23
// CHECK:                      VarDecl type=maybe u8 identifier=tmp identifierLoc=line:12:9 immutable
// CHECK:                  LetDecl letLoc=line:13:8 equalLoc=line:13:16
// CHECK:                        VarDecl type=u8 identifier=tmp identifierLoc=line:13:12 immutable
// CHECK:                      DeclRefExpr type=@lvalue maybe u8 loc=line:13:18 decl='tmp'@line:12:9
// CHECK:                      DeclRefExpr type=(u8, &mut i64) -> maybe &i32 loc=line:14:7 decl='foo'@line:10:8
// CHECK:                        DeclRefExpr type=@lvalue u8 loc=line:14:11 decl='tmp'@line:13:12
// CHECK:                        DeclRefExpr type=@lvalue &mut i64 loc=line:14:16 decl='y'@line:10:19
