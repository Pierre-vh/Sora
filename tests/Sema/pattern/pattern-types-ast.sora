// NOTE: CHECK lines have been generated by utils/update_filecheck_test.py
// RUN: sorac -sema-only -dump-ast %s | FileCheck %s

// @TEST_PATTERN .*Pattern
// @TEST_PATTERN VarDecl
// @TEST_PATTERN .*Expr

func test() {
   let ((a0, a1: i8), a2, (a3: u8, a4)) = ((0, 1), 2, (3, 4))
   let ((_), ()) = (0, ())
}

// CHECK:              TuplePattern type=((i32, i8), i32, (u8, i32)) numElements=3 lParenLoc=line:9:8 rParenLoc=line:9:39
// CHECK-NEXT:           TuplePattern type=(i32, i8) numElements=2 lParenLoc=line:9:9 rParenLoc=line:9:20
// CHECK-NEXT:             VarPattern type=i32 loc=line:9:10 identifier=a0
// CHECK-NEXT:               VarDecl type=i32 identifier=a0 identifierLoc=line:9:10 immutable
// CHECK-NEXT:             TypedPattern type=i8
// CHECK-NEXT:               VarPattern type=i8 loc=line:9:14 identifier=a1
// CHECK-NEXT:                 VarDecl type=i8 identifier=a1 identifierLoc=line:9:14 immutable
// CHECK:                VarPattern type=i32 loc=line:9:23 identifier=a2
// CHECK-NEXT:             VarDecl type=i32 identifier=a2 identifierLoc=line:9:23 immutable
// CHECK-NEXT:           TuplePattern type=(u8, i32) numElements=2 lParenLoc=line:9:27 rParenLoc=line:9:38
// CHECK-NEXT:             TypedPattern type=u8
// CHECK-NEXT:               VarPattern type=u8 loc=line:9:28 identifier=a3
// CHECK-NEXT:                 VarDecl type=u8 identifier=a3 identifierLoc=line:9:28 immutable
// CHECK:                  VarPattern type=i32 loc=line:9:36 identifier=a4
// CHECK-NEXT:               VarDecl type=i32 identifier=a4 identifierLoc=line:9:36 immutable
// CHECK-NEXT:         TupleExpr type=((i32, i8), i32, (u8, i32)) numElements=3 lParenLoc=line:9:43 rParenLoc=line:9:61
// CHECK-NEXT:           TupleExpr type=(i32, i8) numElements=2 lParenLoc=line:9:44 rParenLoc=line:9:49
// CHECK-NEXT:             IntegerLiteralExpr type=i32 loc=line:9:45 str='0' value=0
// CHECK-NEXT:             IntegerLiteralExpr type=i8 loc=line:9:48 str='1' value=1
// CHECK-NEXT:           IntegerLiteralExpr type=i32 loc=line:9:52 str='2' value=2
// CHECK-NEXT:           TupleExpr type=(u8, i32) numElements=2 lParenLoc=line:9:55 rParenLoc=line:9:60
// CHECK-NEXT:             IntegerLiteralExpr type=u8 loc=line:9:56 str='3' value=3
// CHECK-NEXT:             IntegerLiteralExpr type=i32 loc=line:9:59 str='4' value=4
// CHECK:              TuplePattern type=(i32, ()) numElements=2 lParenLoc=line:10:8 rParenLoc=line:10:16
// CHECK-NEXT:           ParenPattern type=i32 lParenLoc=line:10:9 rParenLoc=line:10:11
// CHECK-NEXT:             DiscardPattern type=i32 loc=line:10:10
// CHECK-NEXT:           TuplePattern type=() numElements=0 lParenLoc=line:10:14 rParenLoc=line:10:15
// CHECK-NEXT:         TupleExpr type=(i32, ()) numElements=2 lParenLoc=line:10:20 rParenLoc=line:10:26
// CHECK-NEXT:           IntegerLiteralExpr type=i32 loc=line:10:21 str='0' value=0
// CHECK-NEXT:           TupleExpr type=() numElements=0 lParenLoc=line:10:24 rParenLoc=line:10:25
