// RUN: %sorac-parse -verify -dump-parse %s | %filecheck %s

func tuple() {
  // CHECK: TupleExpr type=<null_type> numElements=0 lParenLoc=line:5:3 rParenLoc=line:5:4
  ()
  // CHECK: ParenExpr type=<null_type> lParenLoc=line:8:3 rParenLoc=line:8:5
  // CHECK-NEXT: IntegerLiteralExpr type=<null_type> loc=line:8:4 str='0' rawValue=0
  (0)
  // CHECK: TupleExpr type=<null_type> numElements=2 lParenLoc=line:12:3 rParenLoc=line:12:8
  // CHECK-NEXT: IntegerLiteralExpr type=<null_type> loc=line:12:4 str='0' rawValue=0
  // CHECK-NEXT: IntegerLiteralExpr type=<null_type> loc=line:12:7 str='1' rawValue=1
  (0, 1)
  // CHECK: TupleExpr type=<null_type> numElements=3 lParenLoc=line:17:3 rParenLoc=line:17:11
  // CHECK-NEXT: IntegerLiteralExpr type=<null_type> loc=line:17:4 str='0' rawValue=0
  // CHECK-NEXT: IntegerLiteralExpr type=<null_type> loc=line:17:7 str='1' rawValue=1
  // CHECK-NEXT: IntegerLiteralExpr type=<null_type> loc=line:17:10 str='2' rawValue=2
  (0, 1, 2)
}

func wrongTuple() {
  (   // expect-note: to match this opening '('
  (0, // expect-error: expected an expression after ','
      // expect-error@-1: expected ')' at end of tuple expression
  let a // to recover
  (   // expect-error: expected an expression after '('
  let b // to recover 
  // extra commas
  // CHECK: TupleExpr type=<null_type> numElements=0 lParenLoc=line:29:3 rParenLoc=line:29:5
  (,)     // expect-error: unexpected ',' separator
  // CHECK: TupleExpr type=<null_type> numElements=2 lParenLoc=line:33:3 rParenLoc=line:33:8
  // CHECK-NEXT: IntegerLiteralExpr type=<null_type> loc=line:33:4 str='0' rawValue=0
  // CHECK-NEXT: IntegerLiteralExpr type=<null_type> loc=line:33:7 str='0' rawValue=0
  (0,,0)  // expect-error: unexpected ',' separator
}