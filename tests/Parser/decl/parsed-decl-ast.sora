// NOTE: CHECK lines have been generated by utils/update_filecheck_test.py
// RUN: sorac -parse-only -dump-parse %s | FileCheck %s

// @TEST_PATTERN .*Decl
// @TEST_PATTERN .*Pattern
// @TEST_PATTERN .*Expr
// @TEST_PATTERN SourceFile

func bar() {}

func foo() -> i32 {}

func nestedfuncs(x: (i32, i32)) -> bool {
  func foo(x: i32) -> (i32, i32) {
    func bar(x: i64, y: i32, z: i32) -> i32 {}
  }
}

func function0(p0: i32, p0: (i32, i32), p1: &mut T) -> &mut (A, B) {}

func letdecl() {
  let a
  let mut a
  let (a, mut (b, c), (z))
  let mut (a, b, c, d)
  let _
  let ((_, _), (_, _))

  let a = 0
  let b = a = b
  let (a, b) = (0, 1)
}

// CHECK:      SourceFile numMembers=5
// CHECK-NEXT:    FuncDecl type=<null_type> identifier=bar identifierLoc=line:9:6 fnLoc=line:9:1
// CHECK:        FuncDecl type=<null_type> identifier=foo identifierLoc=line:11:6 fnLoc=line:11:1
// CHECK:        FuncDecl type=<null_type> identifier=nestedfuncs identifierLoc=line:13:6 fnLoc=line:13:1
// CHECK:            ParamDecl type=<null_type> identifier=x identifierLoc=line:13:18
// CHECK:            FuncDecl type=<null_type> identifier=foo identifierLoc=line:14:8 fnLoc=line:14:3
// CHECK:                ParamDecl type=<null_type> identifier=x identifierLoc=line:14:12
// CHECK:                FuncDecl type=<null_type> identifier=bar identifierLoc=line:15:10 fnLoc=line:15:5
// CHECK:                    ParamDecl type=<null_type> identifier=x identifierLoc=line:15:14
// CHECK:                    ParamDecl type=<null_type> identifier=y identifierLoc=line:15:22
// CHECK:                    ParamDecl type=<null_type> identifier=z identifierLoc=line:15:30
// CHECK:        FuncDecl type=<null_type> identifier=function0 identifierLoc=line:19:6 fnLoc=line:19:1
// CHECK:            ParamDecl type=<null_type> identifier=p0 identifierLoc=line:19:16
// CHECK:            ParamDecl type=<null_type> identifier=p0 identifierLoc=line:19:25
// CHECK:            ParamDecl type=<null_type> identifier=p1 identifierLoc=line:19:41
// CHECK:        FuncDecl type=<null_type> identifier=letdecl identifierLoc=line:21:6 fnLoc=line:21:1
// CHECK:            LetDecl letLoc=line:22:3
// CHECK-NEXT:         VarPattern type=<null_type> loc=line:22:7 identifier=a
// CHECK-NEXT:           VarDecl type=<null_type> identifier=a identifierLoc=line:22:7 immutable
// CHECK-NEXT:       LetDecl letLoc=line:23:3
// CHECK-NEXT:         MutPattern type=<null_type> mutLoc=line:23:7
// CHECK-NEXT:           VarPattern type=<null_type> loc=line:23:11 identifier=a
// CHECK-NEXT:             VarDecl type=<null_type> identifier=a identifierLoc=line:23:11 mutable
// CHECK-NEXT:       LetDecl letLoc=line:24:3
// CHECK-NEXT:         TuplePattern type=<null_type> numElements=3 lParenLoc=line:24:7 rParenLoc=line:24:26
// CHECK-NEXT:           VarPattern type=<null_type> loc=line:24:8 identifier=a
// CHECK-NEXT:             VarDecl type=<null_type> identifier=a identifierLoc=line:24:8 immutable
// CHECK-NEXT:           MutPattern type=<null_type> mutLoc=line:24:11
// CHECK-NEXT:             TuplePattern type=<null_type> numElements=2 lParenLoc=line:24:15 rParenLoc=line:24:20
// CHECK-NEXT:               VarPattern type=<null_type> loc=line:24:16 identifier=b
// CHECK-NEXT:                 VarDecl type=<null_type> identifier=b identifierLoc=line:24:16 mutable
// CHECK-NEXT:               VarPattern type=<null_type> loc=line:24:19 identifier=c
// CHECK-NEXT:                 VarDecl type=<null_type> identifier=c identifierLoc=line:24:19 mutable
// CHECK-NEXT:           ParenPattern type=<null_type> lParenLoc=line:24:23 rParenLoc=line:24:25
// CHECK-NEXT:             VarPattern type=<null_type> loc=line:24:24 identifier=z
// CHECK-NEXT:               VarDecl type=<null_type> identifier=z identifierLoc=line:24:24 immutable
// CHECK-NEXT:       LetDecl letLoc=line:25:3
// CHECK-NEXT:         MutPattern type=<null_type> mutLoc=line:25:7
// CHECK-NEXT:           TuplePattern type=<null_type> numElements=4 lParenLoc=line:25:11 rParenLoc=line:25:22
// CHECK-NEXT:             VarPattern type=<null_type> loc=line:25:12 identifier=a
// CHECK-NEXT:               VarDecl type=<null_type> identifier=a identifierLoc=line:25:12 mutable
// CHECK-NEXT:             VarPattern type=<null_type> loc=line:25:15 identifier=b
// CHECK-NEXT:               VarDecl type=<null_type> identifier=b identifierLoc=line:25:15 mutable
// CHECK-NEXT:             VarPattern type=<null_type> loc=line:25:18 identifier=c
// CHECK-NEXT:               VarDecl type=<null_type> identifier=c identifierLoc=line:25:18 mutable
// CHECK-NEXT:             VarPattern type=<null_type> loc=line:25:21 identifier=d
// CHECK-NEXT:               VarDecl type=<null_type> identifier=d identifierLoc=line:25:21 mutable
// CHECK-NEXT:       LetDecl letLoc=line:26:3
// CHECK-NEXT:         DiscardPattern type=<null_type> loc=line:26:7
// CHECK-NEXT:       LetDecl letLoc=line:27:3
// CHECK-NEXT:         TuplePattern type=<null_type> numElements=2 lParenLoc=line:27:7 rParenLoc=line:27:22
// CHECK-NEXT:           TuplePattern type=<null_type> numElements=2 lParenLoc=line:27:8 rParenLoc=line:27:13
// CHECK-NEXT:             DiscardPattern type=<null_type> loc=line:27:9
// CHECK-NEXT:             DiscardPattern type=<null_type> loc=line:27:12
// CHECK-NEXT:           TuplePattern type=<null_type> numElements=2 lParenLoc=line:27:16 rParenLoc=line:27:21
// CHECK-NEXT:             DiscardPattern type=<null_type> loc=line:27:17
// CHECK-NEXT:             DiscardPattern type=<null_type> loc=line:27:20
// CHECK-NEXT:       LetDecl letLoc=line:29:3 equalLoc=line:29:9
// CHECK-NEXT:         VarPattern type=<null_type> loc=line:29:7 identifier=a
// CHECK-NEXT:           VarDecl type=<null_type> identifier=a identifierLoc=line:29:7 immutable
// CHECK-NEXT:         IntegerLiteralExpr type=<null_type> loc=line:29:11 str='0'
// CHECK-NEXT:       LetDecl letLoc=line:30:3 equalLoc=line:30:9
// CHECK-NEXT:         VarPattern type=<null_type> loc=line:30:7 identifier=b
// CHECK-NEXT:           VarDecl type=<null_type> identifier=b identifierLoc=line:30:7 immutable
// CHECK-NEXT:         BinaryExpr type=<null_type> = (Assign) opLoc=line:30:13
// CHECK-NEXT:           UnresolvedDeclRefExpr type=<null_type> identifier=a loc=line:30:11
// CHECK-NEXT:           UnresolvedDeclRefExpr type=<null_type> identifier=b loc=line:30:15
// CHECK-NEXT:       LetDecl letLoc=line:31:3 equalLoc=line:31:14
// CHECK-NEXT:         TuplePattern type=<null_type> numElements=2 lParenLoc=line:31:7 rParenLoc=line:31:12
// CHECK-NEXT:           VarPattern type=<null_type> loc=line:31:8 identifier=a
// CHECK-NEXT:             VarDecl type=<null_type> identifier=a identifierLoc=line:31:8 immutable
// CHECK-NEXT:           VarPattern type=<null_type> loc=line:31:11 identifier=b
// CHECK-NEXT:             VarDecl type=<null_type> identifier=b identifierLoc=line:31:11 immutable
// CHECK-NEXT:         TupleExpr type=<null_type> numElements=2 lParenLoc=line:31:16 rParenLoc=line:31:21
// CHECK-NEXT:           IntegerLiteralExpr type=<null_type> loc=line:31:17 str='0'
// CHECK-NEXT:           IntegerLiteralExpr type=<null_type> loc=line:31:20 str='1'
