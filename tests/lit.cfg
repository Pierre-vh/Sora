import os
import sys
import lit
import lit.formats
import subprocess

config.name = 'Sora Unit Tests'
config.suffixes = ['.sora']
config.test_format = lit.formats.ShTest(execute_external=False)
config.test_source_root = os.path.dirname(__file__)

sora_bin_dir = lit_config.params.get('sora_bin_dir', None)

# find sorac
if sora_bin_dir:
  # if the user gave us sora_bin_dir, use that.
  print('Sora binaries dir: ' + sora_bin_dir)
  sorac = os.path.join(sora_bin_dir, "sorac")
else:
  # else try to find it in the path
  try:
      subprocess.check_output(["sorac", "-h"])
      # found in path, just use "sorac"
      sorac = "sorac"
  except OSError as e:
    lit_config.error("Can't find the Sora binary in lit parameters or PATH")
    exit(1)

# find FileCheck
try:
    subprocess.check_output(["FileCheck", "--help"])
    # found in path, just use "sorac"
    filecheck = "FileCheck"
except OSError as e:
  lit_config.error("Can't find LLVM FileCheck")
  exit(1)

# Create the base command

# Note: The order of append here is important, because items added first
# are considered by LIT first. 
#
# For instance, if %sorac was at the top of the list any subst beginning 
# with %sorac wouldn't be considered.
#
# So, the rule of thumb is to add the shortest substitutions at the end
# of the list, and the longest, most complete ones at the top of the
# list.
# TODO: Add -typecheck-only or something
config.substitutions.append(('%sorac-typecheck', sorac + " -sema-only"))
config.substitutions.append(('%sorac-parse', sorac + " -parse-only"))
config.substitutions.append(('%sorac', sorac))
config.substitutions.append(('%filecheck', filecheck)) 