// NOTE: CHECK lines have been generated by utils/update_filecheck_test.py
// RUN: sorac -emit-raw-ir -g %s | FileCheck %s

func foo() {
  let ()
  let () = ()

  let (a0, a1) = (0, 1)
  let ((b0, b1, b2), (b3, b4)) = ((0, -2, -3), (0.1, 3.14))
}

// CHECK:      module @"{{.*}}" {
// CHECK-NEXT:   func @foo() -> !sora.void {
// CHECK-NEXT:   ^bb1:  // no predecessors
// CHECK-NEXT:     %0 = sora.create_default_value for !sora.void loc("{{.*}}":6:12)
// CHECK-NEXT:     %c0_i32 = constant 0 : i32 loc("{{.*}}":8:19)
// CHECK-NEXT:     %c1_i32 = constant 1 : i32 loc("{{.*}}":8:22)
// CHECK-NEXT:     %1 = sora.create_tuple(%c0_i32, %c1_i32 : i32, i32) -> tuple<i32, i32> loc("{{.*}}":8:18)
// CHECK-NEXT:     %2:2 = sora.destructure_tuple(%1 : tuple<i32, i32>) -> i32, i32 loc("{{.*}}":8:7)
// CHECK-NEXT:     %c0_i32_0 = constant 0 : i32 loc("{{.*}}":9:36)
// CHECK-NEXT:     %c-2_i32 = constant -2 : i32 loc("{{.*}}":9:40)
// CHECK-NEXT:     %c-3_i32 = constant -3 : i32 loc("{{.*}}":9:44)
// CHECK-NEXT:     %3 = sora.create_tuple(%c0_i32_0, %c-2_i32, %c-3_i32 : i32, i32, i32) -> tuple<i32, i32, i32> loc("{{.*}}":9:35)
// CHECK-NEXT:     %cst = constant 1.000000e-01 : f32 loc("{{.*}}":9:49)
// CHECK-NEXT:     %cst_1 = constant 3.140000e+00 : f32 loc("{{.*}}":9:54)
// CHECK-NEXT:     %4 = sora.create_tuple(%cst, %cst_1 : f32, f32) -> tuple<f32, f32> loc("{{.*}}":9:48)
// CHECK-NEXT:     %5 = sora.create_tuple(%3, %4 : tuple<i32, i32, i32>, tuple<f32, f32>) -> tuple<tuple<i32, i32, i32>, tuple<f32, f32>> loc("{{.*}}":9:34)
// CHECK-NEXT:     %6:2 = sora.destructure_tuple(%5 : tuple<tuple<i32, i32, i32>, tuple<f32, f32>>) -> tuple<i32, i32, i32>, tuple<f32, f32> loc("{{.*}}":9:7)
// CHECK-NEXT:     %7:3 = sora.destructure_tuple(%6#0 : tuple<i32, i32, i32>) -> i32, i32, i32 loc("{{.*}}":9:8)
// CHECK-NEXT:     %8:2 = sora.destructure_tuple(%6#1 : tuple<f32, f32>) -> f32, f32 loc("{{.*}}":9:22)
// CHECK-NEXT:   } loc("{{.*}}":4:6)
// CHECK-NEXT: }
