// NOTE: CHECK lines have been generated by utils/update_filecheck_test.py
// RUN: sorac -emit-sirgen -g %s | FileCheck %s

// Simple tests
func voidFn() {
  return
}

func intFn() -> isize {
  return 0
}

func tupleFn() -> (u32, i32) {
  return (0, 1)
}

// Void-like functions: They're lowered to void functions and thus their result expr
// shouldn't be used in the return op.
func voidLikeA() -> (void, void) {
  return ((), ())
}

func voidLikeB() -> ((void, void), (void, void)) {
  return (((), ()), ((), ()))
}

// CHECK:      module @"{{.*}}" {
// CHECK-NEXT:   func @voidFn() {
// CHECK-NEXT:     return loc("{{.*}}":6:3)
// CHECK-NEXT:   } loc("{{.*}}":5:6)
// CHECK-NEXT:   func @intFn() -> i64 {
// CHECK-NEXT:     %c0_i64 = constant 0 : i64 loc("{{.*}}":10:10)
// CHECK-NEXT:     return %c0_i64 : i64 loc("{{.*}}":10:3)
// CHECK-NEXT:   } loc("{{.*}}":9:6)
// CHECK-NEXT:   func @tupleFn() -> tuple<i32, i32> {
// CHECK-NEXT:     %c0_i32 = constant 0 : i32 loc("{{.*}}":14:11)
// CHECK-NEXT:     %c1_i32 = constant 1 : i32 loc("{{.*}}":14:14)
// CHECK-NEXT:     %0 = sir.create_tuple(%c0_i32, %c1_i32 : i32, i32) -> tuple<i32, i32> loc("{{.*}}":14:10)
// CHECK-NEXT:     return %0 : tuple<i32, i32> loc("{{.*}}":14:3)
// CHECK-NEXT:   } loc("{{.*}}":13:6)
// CHECK-NEXT:   func @voidLikeA() {
// CHECK-NEXT:     %0 = sir.void_constant loc("{{.*}}":20:11)
// CHECK-NEXT:     %1 = sir.void_constant loc("{{.*}}":20:15)
// CHECK-NEXT:     %2 = sir.create_tuple(%0, %1 : !sir.void, !sir.void) -> tuple<!sir.void, !sir.void> loc("{{.*}}":20:10)
// CHECK-NEXT:     return loc("{{.*}}":20:3)
// CHECK-NEXT:   } loc("{{.*}}":19:6)
// CHECK-NEXT:   func @voidLikeB() {
// CHECK-NEXT:     %0 = sir.void_constant loc("{{.*}}":24:12)
// CHECK-NEXT:     %1 = sir.void_constant loc("{{.*}}":24:16)
// CHECK-NEXT:     %2 = sir.create_tuple(%0, %1 : !sir.void, !sir.void) -> tuple<!sir.void, !sir.void> loc("{{.*}}":24:11)
// CHECK-NEXT:     %3 = sir.void_constant loc("{{.*}}":24:22)
// CHECK-NEXT:     %4 = sir.void_constant loc("{{.*}}":24:26)
// CHECK-NEXT:     %5 = sir.create_tuple(%3, %4 : !sir.void, !sir.void) -> tuple<!sir.void, !sir.void> loc("{{.*}}":24:21)
// CHECK-NEXT:     %6 = sir.create_tuple(%2, %5 : tuple<!sir.void, !sir.void>, tuple<!sir.void, !sir.void>) -> tuple<tuple<!sir.void, !sir.void>, tuple<!sir.void, !sir.void>> loc("{{.*}}":24:10)
// CHECK-NEXT:     return loc("{{.*}}":24:3)
// CHECK-NEXT:   } loc("{{.*}}":23:6)
// CHECK-NEXT: }
