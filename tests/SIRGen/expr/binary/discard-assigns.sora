// NOTE: CHECK lines have been generated by utils/update_filecheck_test.py
// RUN: sorac -emit-sirgen -g %s | FileCheck %s

func foo() {
  _ = (0, 1)
  _ = foo
  _ = 0
  _ = ()
  _ = (1, (2, 3, (4, 5)))
}

// CHECK:      module @"{{.*}}" {
// CHECK-NEXT:   func @foo() {
// CHECK-NEXT:     %c0_i32 = constant 0 : i32 loc("{{.*}}":5:8)
// CHECK-NEXT:     %c1_i32 = constant 1 : i32 loc("{{.*}}":5:11)
// CHECK-NEXT:     %0 = sir.create_tuple(%c0_i32, %c1_i32 : i32, i32) -> tuple<i32, i32> loc("{{.*}}":5:7)
// CHECK-NEXT:     %f = constant @foo : () -> () loc("{{.*}}":6:7)
// CHECK-NEXT:     %c0_i32_0 = constant 0 : i32 loc("{{.*}}":7:7)
// CHECK-NEXT:     %1 = sir.void_constant loc("{{.*}}":8:7)
// CHECK-NEXT:     %c1_i32_1 = constant 1 : i32 loc("{{.*}}":9:8)
// CHECK-NEXT:     %c2_i32 = constant 2 : i32 loc("{{.*}}":9:12)
// CHECK-NEXT:     %c3_i32 = constant 3 : i32 loc("{{.*}}":9:15)
// CHECK-NEXT:     %c4_i32 = constant 4 : i32 loc("{{.*}}":9:19)
// CHECK-NEXT:     %c5_i32 = constant 5 : i32 loc("{{.*}}":9:22)
// CHECK-NEXT:     %2 = sir.create_tuple(%c4_i32, %c5_i32 : i32, i32) -> tuple<i32, i32> loc("{{.*}}":9:18)
// CHECK-NEXT:     %3 = sir.create_tuple(%c2_i32, %c3_i32, %2 : i32, i32, tuple<i32, i32>) -> tuple<i32, i32, tuple<i32, i32>> loc("{{.*}}":9:11)
// CHECK-NEXT:     %4 = sir.create_tuple(%c1_i32_1, %3 : i32, tuple<i32, i32, tuple<i32, i32>>) -> tuple<i32, tuple<i32, i32, tuple<i32, i32>>> loc("{{.*}}":9:7)
// CHECK-NEXT:     sir.default_return loc("{{.*}}":10:1)
// CHECK-NEXT:   } loc("{{.*}}":4:6)
// CHECK-NEXT: }
