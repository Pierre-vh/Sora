// NOTE: CHECK lines have been generated by utils/update_filecheck_test.py
// RUN: sorac -emit-sirgen -g %s | FileCheck %s

// Tests simple assignements: declref, deref and TupleElementExprs on the RHS.
// FIXME: Add more tests.

func declRef() {
  let mut x: i8 = 0
  x = 1
  ((x)) = 0

  let ref: &mut i32
  let mut otherRef: &i32
  otherRef = ref
  ((otherRef)) = ref
}

// TODO: Deref and TupleElementExpr tests.

// CHECK:      module @"{{.*}}" {
// CHECK-NEXT:   func @declRef() {
// CHECK-NEXT:     %c0_i8 = constant 0 : i8 loc("{{.*}}":8:19)
// CHECK-NEXT:     %0 = sir.alloc_stack : !sir.pointer<i8> loc("{{.*}}":8:11)
// CHECK-NEXT:     sir.store %c0_i8 : i8 into %0 : !sir.pointer<i8> loc("{{.*}}":8:11)
// CHECK-NEXT:     %c1_i8 = constant 1 : i8 loc("{{.*}}":9:7)
// CHECK-NEXT:     sir.store %c1_i8 : i8 into %0 : !sir.pointer<i8> loc("{{.*}}":9:5)
// CHECK-NEXT:     %c0_i8_0 = constant 0 : i8 loc("{{.*}}":10:11)
// CHECK-NEXT:     sir.store %c0_i8_0 : i8 into %0 : !sir.pointer<i8> loc("{{.*}}":10:9)
// CHECK-NEXT:     %1 = sir.alloc_stack : !sir.pointer<!sir.reference<i32>> loc("{{.*}}":12:7)
// CHECK-NEXT:     %2 = sir.alloc_stack : !sir.pointer<!sir.reference<i32>> loc("{{.*}}":13:11)
// CHECK-NEXT:     %3 = sir.load %1 : (!sir.pointer<!sir.reference<i32>>) -> !sir.reference<i32> loc("{{.*}}":14:14)
// CHECK-NEXT:     sir.store %3 : !sir.reference<i32> into %2 : !sir.pointer<!sir.reference<i32>> loc("{{.*}}":14:12)
// CHECK-NEXT:     %4 = sir.load %1 : (!sir.pointer<!sir.reference<i32>>) -> !sir.reference<i32> loc("{{.*}}":15:18)
// CHECK-NEXT:     sir.store %4 : !sir.reference<i32> into %2 : !sir.pointer<!sir.reference<i32>> loc("{{.*}}":15:16)
// CHECK-NEXT:     sir.default_return loc("{{.*}}":16:1)
// CHECK-NEXT:   } loc("{{.*}}":7:6)
// CHECK-NEXT: }
