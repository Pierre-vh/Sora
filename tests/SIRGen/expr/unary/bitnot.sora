// NOTE: CHECK lines have been generated by utils/update_filecheck_test.py
// RUN: sorac -emit-sirgen -g %s | FileCheck %s

func bitnot() {
  let x = 52

  ~x
  ~(x)
  ~~x
  ~(~(x))
  ~~~x
  ~(~(~(x)))

  ~0
  ~(0)
  ~~0
  ~(~(0))
  ~~~0
  ~(~(~(0)))
}

// CHECK:      module @"{{.*}}" {
// CHECK-NEXT:   func @bitnot() {
// CHECK-NEXT:     %c52_i32 = constant 52 : i32 loc("{{.*}}":5:11)
// CHECK-NEXT:     %0 = sir.alloc_stack : !sir.pointer<i32> loc("{{.*}}":5:7)
// CHECK-NEXT:     sir.store %c52_i32 : i32 into %0 : !sir.pointer<i32> loc("{{.*}}":5:7)
// CHECK-NEXT:     %1 = sir.load %0 : (!sir.pointer<i32>) -> i32 loc("{{.*}}":7:4)
// CHECK-NEXT:     %2 = sir.bitnot : i32 loc("{{.*}}":7:3)
// CHECK-NEXT:     %3 = sir.load %0 : (!sir.pointer<i32>) -> i32 loc("{{.*}}":8:5)
// CHECK-NEXT:     %4 = sir.bitnot : i32 loc("{{.*}}":8:3)
// CHECK-NEXT:     %5 = sir.load %0 : (!sir.pointer<i32>) -> i32 loc("{{.*}}":9:5)
// CHECK-NEXT:     %6 = sir.bitnot : i32 loc("{{.*}}":9:4)
// CHECK-NEXT:     %7 = sir.bitnot : i32 loc("{{.*}}":9:3)
// CHECK-NEXT:     %8 = sir.load %0 : (!sir.pointer<i32>) -> i32 loc("{{.*}}":10:7)
// CHECK-NEXT:     %9 = sir.bitnot : i32 loc("{{.*}}":10:5)
// CHECK-NEXT:     %10 = sir.bitnot : i32 loc("{{.*}}":10:3)
// CHECK-NEXT:     %11 = sir.load %0 : (!sir.pointer<i32>) -> i32 loc("{{.*}}":11:6)
// CHECK-NEXT:     %12 = sir.bitnot : i32 loc("{{.*}}":11:5)
// CHECK-NEXT:     %13 = sir.bitnot : i32 loc("{{.*}}":11:4)
// CHECK-NEXT:     %14 = sir.bitnot : i32 loc("{{.*}}":11:3)
// CHECK-NEXT:     %15 = sir.load %0 : (!sir.pointer<i32>) -> i32 loc("{{.*}}":12:9)
// CHECK-NEXT:     %16 = sir.bitnot : i32 loc("{{.*}}":12:7)
// CHECK-NEXT:     %17 = sir.bitnot : i32 loc("{{.*}}":12:5)
// CHECK-NEXT:     %18 = sir.bitnot : i32 loc("{{.*}}":12:3)
// CHECK-NEXT:     %c0_i32 = constant 0 : i32 loc("{{.*}}":14:4)
// CHECK-NEXT:     %19 = sir.bitnot : i32 loc("{{.*}}":14:3)
// CHECK-NEXT:     %c0_i32_0 = constant 0 : i32 loc("{{.*}}":15:5)
// CHECK-NEXT:     %20 = sir.bitnot : i32 loc("{{.*}}":15:3)
// CHECK-NEXT:     %c0_i32_1 = constant 0 : i32 loc("{{.*}}":16:5)
// CHECK-NEXT:     %21 = sir.bitnot : i32 loc("{{.*}}":16:4)
// CHECK-NEXT:     %22 = sir.bitnot : i32 loc("{{.*}}":16:3)
// CHECK-NEXT:     %c0_i32_2 = constant 0 : i32 loc("{{.*}}":17:7)
// CHECK-NEXT:     %23 = sir.bitnot : i32 loc("{{.*}}":17:5)
// CHECK-NEXT:     %24 = sir.bitnot : i32 loc("{{.*}}":17:3)
// CHECK-NEXT:     %c0_i32_3 = constant 0 : i32 loc("{{.*}}":18:6)
// CHECK-NEXT:     %25 = sir.bitnot : i32 loc("{{.*}}":18:5)
// CHECK-NEXT:     %26 = sir.bitnot : i32 loc("{{.*}}":18:4)
// CHECK-NEXT:     %27 = sir.bitnot : i32 loc("{{.*}}":18:3)
// CHECK-NEXT:     %c0_i32_4 = constant 0 : i32 loc("{{.*}}":19:9)
// CHECK-NEXT:     %28 = sir.bitnot : i32 loc("{{.*}}":19:7)
// CHECK-NEXT:     %29 = sir.bitnot : i32 loc("{{.*}}":19:5)
// CHECK-NEXT:     %30 = sir.bitnot : i32 loc("{{.*}}":19:3)
// CHECK-NEXT:     sir.default_return loc("{{.*}}":20:1)
// CHECK-NEXT:   } loc("{{.*}}":4:6)
// CHECK-NEXT: }
