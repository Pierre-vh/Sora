// NOTE: CHECK lines have been generated by utils/update_filecheck_test.py
// RUN: sorac -emit-sirgen -g %s | FileCheck %s

func unaryMinusInt() {
  -1
  -(1)
  --10
  -(-(10))
  ---100
  -(-(-(100)))
}

func unaryMinusFlt() {
  -1.0
  -(1.0)
  --10.0
  -(-(10.0))
  ---100.0
  -(-(-(100.0)))
}

func unaryLNot() {
  !true
  !(true)
  !!true
  !(!(true))
  !!!true
  !(!(!(true)))
}

func unaryPluInt() {
  +1
  +(1)
  ++10
  +(+(10))
  +++100
  +(+(+(100)))
}

func unaryPlusFloat() {
  +1.0
  +(1.0)
  ++10.0
  +(+(10.0))
  +++100.0
  +(+(+(100.0)))
}

// CHECK:      module @"{{.*}}" {
// CHECK-NEXT:   func @unaryMinusInt() {
// CHECK-NEXT:     %c-1_i32 = constant -1 : i32 loc("{{.*}}":5:4)
// CHECK-NEXT:     %c-1_i32_0 = constant -1 : i32 loc("{{.*}}":6:5)
// CHECK-NEXT:     %c10_i32 = constant 10 : i32 loc("{{.*}}":7:5)
// CHECK-NEXT:     %c10_i32_1 = constant 10 : i32 loc("{{.*}}":8:7)
// CHECK-NEXT:     %c-100_i32 = constant -100 : i32 loc("{{.*}}":9:6)
// CHECK-NEXT:     %c-100_i32_2 = constant -100 : i32 loc("{{.*}}":10:9)
// CHECK-NEXT:     sir.default_return loc("{{.*}}":11:1)
// CHECK-NEXT:   } loc("{{.*}}":4:6)
// CHECK-NEXT:   func @unaryMinusFlt() {
// CHECK-NEXT:     %cst = constant -1.000000e+00 : f32 loc("{{.*}}":14:4)
// CHECK-NEXT:     %cst_0 = constant -1.000000e+00 : f32 loc("{{.*}}":15:5)
// CHECK-NEXT:     %cst_1 = constant 1.000000e+01 : f32 loc("{{.*}}":16:5)
// CHECK-NEXT:     %cst_2 = constant 1.000000e+01 : f32 loc("{{.*}}":17:7)
// CHECK-NEXT:     %cst_3 = constant -1.000000e+02 : f32 loc("{{.*}}":18:6)
// CHECK-NEXT:     %cst_4 = constant -1.000000e+02 : f32 loc("{{.*}}":19:9)
// CHECK-NEXT:     sir.default_return loc("{{.*}}":20:1)
// CHECK-NEXT:   } loc("{{.*}}":13:6)
// CHECK-NEXT:   func @unaryLNot() {
// CHECK-NEXT:     %false = constant 0 : i1 loc("{{.*}}":23:4)
// CHECK-NEXT:     %false_0 = constant 0 : i1 loc("{{.*}}":24:5)
// CHECK-NEXT:     %true = constant 1 : i1 loc("{{.*}}":25:5)
// CHECK-NEXT:     %true_1 = constant 1 : i1 loc("{{.*}}":26:7)
// CHECK-NEXT:     %false_2 = constant 0 : i1 loc("{{.*}}":27:6)
// CHECK-NEXT:     %false_3 = constant 0 : i1 loc("{{.*}}":28:9)
// CHECK-NEXT:     sir.default_return loc("{{.*}}":29:1)
// CHECK-NEXT:   } loc("{{.*}}":22:6)
// CHECK-NEXT:   func @unaryPluInt() {
// CHECK-NEXT:     %c1_i32 = constant 1 : i32 loc("{{.*}}":32:4)
// CHECK-NEXT:     %c1_i32_0 = constant 1 : i32 loc("{{.*}}":33:5)
// CHECK-NEXT:     %c10_i32 = constant 10 : i32 loc("{{.*}}":34:5)
// CHECK-NEXT:     %c10_i32_1 = constant 10 : i32 loc("{{.*}}":35:7)
// CHECK-NEXT:     %c100_i32 = constant 100 : i32 loc("{{.*}}":36:6)
// CHECK-NEXT:     %c100_i32_2 = constant 100 : i32 loc("{{.*}}":37:9)
// CHECK-NEXT:     sir.default_return loc("{{.*}}":38:1)
// CHECK-NEXT:   } loc("{{.*}}":31:6)
// CHECK-NEXT:   func @unaryPlusFloat() {
// CHECK-NEXT:     %cst = constant 1.000000e+00 : f32 loc("{{.*}}":41:4)
// CHECK-NEXT:     %cst_0 = constant 1.000000e+00 : f32 loc("{{.*}}":42:5)
// CHECK-NEXT:     %cst_1 = constant 1.000000e+01 : f32 loc("{{.*}}":43:5)
// CHECK-NEXT:     %cst_2 = constant 1.000000e+01 : f32 loc("{{.*}}":44:7)
// CHECK-NEXT:     %cst_3 = constant 1.000000e+02 : f32 loc("{{.*}}":45:6)
// CHECK-NEXT:     %cst_4 = constant 1.000000e+02 : f32 loc("{{.*}}":46:9)
// CHECK-NEXT:     sir.default_return loc("{{.*}}":47:1)
// CHECK-NEXT:   } loc("{{.*}}":40:6)
// CHECK-NEXT: }
