// NOTE: CHECK lines have been generated by utils/update_filecheck_test.py
// RUN: sorac -emit-sirgen -g %s | FileCheck %s

func test() {
  ()
  (1, 2)
  (1, 2, 3, 4, 5)
  ((1, 2), (3, 4))
}

// CHECK:      module @"{{.*}}" {
// CHECK-NEXT:   func @test() {
// CHECK-NEXT:     %0 = sir.void_constant loc("{{.*}}":5:3)
// CHECK-NEXT:     %c1_i32 = constant 1 : i32 loc("{{.*}}":6:4)
// CHECK-NEXT:     %c2_i32 = constant 2 : i32 loc("{{.*}}":6:7)
// CHECK-NEXT:     %1 = sir.create_tuple(%c1_i32, %c2_i32 : i32, i32) -> tuple<i32, i32> loc("{{.*}}":6:3)
// CHECK-NEXT:     %c1_i32_0 = constant 1 : i32 loc("{{.*}}":7:4)
// CHECK-NEXT:     %c2_i32_1 = constant 2 : i32 loc("{{.*}}":7:7)
// CHECK-NEXT:     %c3_i32 = constant 3 : i32 loc("{{.*}}":7:10)
// CHECK-NEXT:     %c4_i32 = constant 4 : i32 loc("{{.*}}":7:13)
// CHECK-NEXT:     %c5_i32 = constant 5 : i32 loc("{{.*}}":7:16)
// CHECK-NEXT:     %2 = sir.create_tuple(%c1_i32_0, %c2_i32_1, %c3_i32, %c4_i32, %c5_i32 : i32, i32, i32, i32, i32) -> tuple<i32, i32, i32, i32, i32> loc("{{.*}}":7:3)
// CHECK-NEXT:     %c1_i32_2 = constant 1 : i32 loc("{{.*}}":8:5)
// CHECK-NEXT:     %c2_i32_3 = constant 2 : i32 loc("{{.*}}":8:8)
// CHECK-NEXT:     %3 = sir.create_tuple(%c1_i32_2, %c2_i32_3 : i32, i32) -> tuple<i32, i32> loc("{{.*}}":8:4)
// CHECK-NEXT:     %c3_i32_4 = constant 3 : i32 loc("{{.*}}":8:13)
// CHECK-NEXT:     %c4_i32_5 = constant 4 : i32 loc("{{.*}}":8:16)
// CHECK-NEXT:     %4 = sir.create_tuple(%c3_i32_4, %c4_i32_5 : i32, i32) -> tuple<i32, i32> loc("{{.*}}":8:12)
// CHECK-NEXT:     %5 = sir.create_tuple(%3, %4 : tuple<i32, i32>, tuple<i32, i32>) -> tuple<tuple<i32, i32>, tuple<i32, i32>> loc("{{.*}}":8:3)
// CHECK-NEXT:   } loc("{{.*}}":4:6)
// CHECK-NEXT: }
