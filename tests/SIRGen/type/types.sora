// NOTE: CHECK lines have been generated by utils/update_filecheck_test.py
// RUN: sorac -emit-sirgen %s | FileCheck %s

// @TEST_PATTERN func

func void_t() {}

func i8_t() -> i8 {}
func i16_t() -> i16 {}
func i32_t() -> i32 {}
func i64_t() -> i64 {}
func isize_t() -> isize {}
func u8_t() -> u8 {}
func u16_t() -> u16 {}
func u32_t() -> u32 {}
func u64_t() -> u64 {}
func usize_t() -> usize {}

func f32_t() -> f32 {}
func f64_t() -> f64 {}

func bool_t() -> bool {}

func tuple_t0() -> () {}
func tuple_t2() -> (bool, bool) {}
func tuple_t3() -> (bool, bool, i32) {}
func tuple_t4() -> (bool, void, i32, i32) {}
func tuple_tfoo() -> (i32, (i32, (i32, i32))) {}

func maybe_t() -> maybe i32 {}
func maybe_tfoo() -> maybe (i32, maybe i64) {}

func ref_t_imm() -> &i32 {}
func ref_t_mut() -> &mut i32 {}
func ref_tfoo() -> &(&mut i32, &mut i64) {}

func fn_0(x: i32) -> i64 {}
func fn_1(x: maybe u8) -> maybe u16 {}

func voidlike_tuple0() -> ((), void) {}
func voidlike_tuple1() -> (((), void), (void, ())) {}
func voidlike_tuple2() -> (void, ((), void)) {}

func nonvoidlike_tuple0() -> ((), &void) {}
func nonvoidlike_tuple1() -> (((), maybe void), (void, ())) {}
func nonvoidlike_tuple2() -> (void, ((), &void)) {}

// CHECK:        func @void_t() {
// CHECK:        func @i8_t() -> i8 {
// CHECK:        func @i16_t() -> i16 {
// CHECK:        func @i32_t() -> i32 {
// CHECK:        func @i64_t() -> i64 {
// CHECK:        func @isize_t() -> i64 {
// CHECK:        func @u8_t() -> i8 {
// CHECK:        func @u16_t() -> i16 {
// CHECK:        func @u32_t() -> i32 {
// CHECK:        func @u64_t() -> i64 {
// CHECK:        func @usize_t() -> i64 {
// CHECK:        func @f32_t() -> f32 {
// CHECK:        func @f64_t() -> f64 {
// CHECK:        func @bool_t() -> i1 {
// CHECK:        func @tuple_t0() {
// CHECK:        func @tuple_t2() -> tuple<i1, i1> {
// CHECK:        func @tuple_t3() -> tuple<i1, i1, i32> {
// CHECK:        func @tuple_t4() -> tuple<i1, !sir.void, i32, i32> {
// CHECK:        func @tuple_tfoo() -> tuple<i32, tuple<i32, tuple<i32, i32>>> {
// CHECK:        func @maybe_t() -> !sir.maybe<i32> {
// CHECK:        func @maybe_tfoo() -> !sir.maybe<tuple<i32, !sir.maybe<i64>>> {
// CHECK:        func @ref_t_imm() -> !sir.reference<i32> {
// CHECK:        func @ref_t_mut() -> !sir.reference<i32> {
// CHECK:        func @ref_tfoo() -> !sir.reference<tuple<!sir.reference<i32>, !sir.reference<i64>>> {
// CHECK:        func @fn_0(%arg0: i32) -> i64 {
// CHECK:        func @fn_1(%arg0: !sir.maybe<i8>) -> !sir.maybe<i16> {
// CHECK:        func @voidlike_tuple0() {
// CHECK:        func @voidlike_tuple1() {
// CHECK:        func @voidlike_tuple2() {
// CHECK:        func @nonvoidlike_tuple0() -> tuple<!sir.void, !sir.reference<!sir.void>> {
// CHECK:        func @nonvoidlike_tuple1() -> tuple<tuple<!sir.void, !sir.maybe<!sir.void>>, tuple<!sir.void, !sir.void>> {
// CHECK:        func @nonvoidlike_tuple2() -> tuple<!sir.void, tuple<!sir.void, !sir.reference<!sir.void>>> {
